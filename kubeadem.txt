$ sudo apt update
$ sudo apt install -y docker.io
$ vi /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
  "max-size": "100m"
  },
  "storage-driver": "overlay2"
}

$ sudo systemctl enable docker.service --now
$ systemctl status docker
$ docker --version

● sudo systemctl enable docker
● sudo systemctl daemon-reload
● sudo systemctl restart docker    


------------------------------------------------------------------------------------------------------
 1  sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
     2  sudo swapoff -a
     3  vi /etc/sysctl.conf
     4  sudo apt install -y apt-transport-https curl
     
     6  sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
     7  echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
     8  sudo apt-get update
     9  sudo apt-get install -y kubelet kubeadm kubectl
     10 sudo apt-mark hold kubelet kubeadm kubectl
------------------------------------------------------------------------------------------------------------

Initialize the Cluster and Master Node

sudo kubeadm init

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl cluster-info

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"



-------------------------

Join the Worker Nodes to Kubernetes Cluster

sudo kubeadm join 192.168.1.234:6443 --token axwp1d.XXXXXXXXXX \
 --discovery-token-ca-cert-hash sha256:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX1e74

--------------------------------------------------------------------------------------------------------------
give name to worker node command 

kubectl label node ip-172-31-42-205 node-role.kubernetes.io/worker1=worker

----------------------------------------------------------------------------------------------------------
apiVersion: v1
kind: Service
metadata:
  name: valaxy-service
  labels:
    app: valaxy-devops-project
spec:
  selector:
    app: valaxy-devops-project
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 31200
---------------------------------------------------------------------------------------------------------
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: valaxy-deployment
spec:
  selector:
    matchLabels:
      app: valaxy-devops-project
  replicas: 2 # tells deployment to run 2 pods matching the template
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1

  template:
    metadata:
      labels:
        app: valaxy-devops-project
    spec:
      containers:
      - name: valaxy-devops-project
        image: yankils/simple-devops-image
        imagePullPolicy: Always
        ports:
        - containerPort: 8080

